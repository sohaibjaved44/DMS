@using DMS.Models
@model DMS.Models.DCMNT_TBL
@{
    ViewBag.Title = "Edit";
    List<string> paths = new List<string>();
}
<script type="text/javascript" src="~/Scripts/tiff.js-master/tiff.min.js"></script>
<div class="row">
    <h2>Edit Document</h2>

    <div class="col-md-6">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <hr/>
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                <div class="form-group" style="display: none">
                    @Html.LabelFor(model => model.DCMT_ID, htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.DCMT_ID, new {htmlAttributes = new {@class = "form-control", disabled = "disabled"}})
                        @Html.ValidationMessageFor(model => model.DCMT_ID, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Policy Number", htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.PLCY_NUM, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.PLCY_NUM, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Scan Date", htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.SCAN_DTE, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.SCAN_DTE, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("File Name", htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.FILE_NME, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.FILE_NME, "", new {@class = "text-danger"})
                    </div>
                </div>

                @*<div class="form-group" style="display:none">
                    @Html.LabelFor(model => model.EXTN, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.EXTN, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EXTN, "", new { @class = "text-danger" })
                    </div>
                </div>*@

                <div class="form-group">
                    @Html.Label("First Name", htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.FRST_NME, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.FRST_NME, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Last Name", htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.LAST_NME, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.LAST_NME, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group" style="display: none">
                    @Html.LabelFor(model => model.STRG_LOC, htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.STRG_LOC, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.STRG_LOC, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Document Note", htmlAttributes: new {@class = "control-label col-md-4"})
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.DCMT_NTE, new {htmlAttributes = new {@class = "form-control"}})
                        @Html.ValidationMessageFor(model => model.DCMT_NTE, "", new {@class = "text-danger"})
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-6">
                        <input type="submit" value="Save" class="btn btn-default"/>
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
    <div id="doc" class="col-md-6 pre-scrollable">

        @*@using (DMSDbEntities db = new DMSDbEntities())
            {
                paths = db.DCMNT_TBL.Where(p => p.DCMT_ID == Model.DCMT_ID).Select(p=>p.STRG_LOC).ToList();
            }*@

        @*@foreach (var item in paths)
            {
                <img src="@item"/>
            }*@

        <img src="@Model.STRG_LOC"/>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        
        var xhr = new XMLHttpRequest();
        //xhr.responseType = 'arraybuffer';
        xhr.open('GET', '@Model.STRG_LOC',false);
        xhr.onreadystatechange = function ()
        {
            if (xhr.readyState === 4)
            {           
                if (xhr.status === 200 || xhr.status == 0)
                {
                    var tiff = new Tiff({ buffer: xhr.response });
                    var canvas = tiff.toCanvas();
                    //document.body.append(canvas);
                    $("#doc").append(canvas);
                }
            }
        };
        xhr.send(null);
    });
</script>